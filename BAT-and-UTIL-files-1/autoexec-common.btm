@Echo off


rem Only meant to be called by the various autoexec-<MACHINENAME>.BTM/.BATs

rem Set colors so less_important works:
        rem nahhh too complicated to do it this early call set-colors force

rem Set cosmetics:
        if "1" !=          "%TCSTART_FINISHED%" call tcstart.bat
        if "1" != "%ANSI_COLORS_HAVE_BEEN_SET%" call c:\bat\set-ansi.bat   force
        if "1" !=      "%EMOJIS_HAVE_BEEN_SET%" call c:\bat\set-emojis.bat force
        call c:\bat\print-message.bat vars_only
        gosub done_with_step

rem Set path:
        rem call c:\bat\less_important "Setting path..."
        echo * Setting path...
        call c:\bat\setpath.bat %*
        gosub done_with_step

rem Initialize environment:
        rem call less_important "Initializing environment..."
        echo * Initializing environment...
        call environm 
        window "AUTOEXEC"
        gosub done_with_step
        call footer "Running %@NAME[%0]..."

rem Load our autohotkey script right away since it has winamp control aspects in it
        echos %@ANSI_MOVE_TO_COL[1]``
        call less_important "Initializing %italics_on%AutoHotKey%italics_off%..."
        call AutoHotKey-autoexec.bat %*
        gosub done_with_step




rem Log the reboot:
        echo * %0 run at at %_DATETIME>>c:\logs\reboots-%MACHINENAME%.log


rem Start the service called "Everything" (not the abstract concept of everything):
        call less_important "Initializing %italics_on%Everything%italics_off% service..."
        call start-everything %*
        gosub done_with_step

rem Girder?
        if     isdir c:\girder (call start-girder)
        if not isdir c:\girder (call warning "not starting girder")




                
REM Above all else, the music must flow â€”â€” but only if it's the music server:
        iff "%MACHINENAME%" eq "%MUSICSERVERMACHINENAME%" then
            call winamp autoexec
            call sleep 3
            call fix-minilyrics-window-size-and-position
            if isfunction randcursor (echos %@RANDCURSOR[])
        endiff

rem Things for our primary machines only:
        iff "%machinename%" == "WYVERN" .or. "%machinename%" == "DEMONA" then               
                rem Start Discord bot:
                        call  less_important "Initializing Discord bot..."        %+  gosub done_with_step
                        call  discord-bot      %*                                 %+  gosub done_with_step

                rem Start calendar monitor for primary machines only:
                        call  less_important "Initializing calendar monitor..."   %+  gosub done_with_step
                        call  calendar-monitor %*                                 %+  gosub done_with_step
                                                                                   
                REM backup files                                                   
                        call  backup-important-files   %*                         %+  gosub done_with_step
                        call  backup-important-folders %*                         %+  gosub done_with_step
        :endiff




rem Minimize annoying programs...
        call less_important "Minimizing %italics_on%imUp%italics_off% & %italics_on%Girder%italics_off% windows..."
        windowhide.exe /min "imUp"
        if isdir c:\girder windowhide.exe /min "girder"
        gosub done_with_step





REM Common programs to start before we do our backups:
        call chrome
        call opera






rem Map drives
        call important "Mapping drives..."
        if isfunction randcursor (echos %@RANDCURSOR[])
        rem ðŸš« *start "" /min c:\tcmd\tcc.exe c:\bat\map-drives.btm exitafter
        REM call helper-start c:\tcmd\tcc.exe c:\bat\map-drives.btm exitafter
        call map-drives once
        gosub done_with_step




goto :END

            :done_with_step
                title AUTOEXEC
                if isfunction randcursor (echos %@RANDCURSOR[])
            return





rem â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€“â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€“â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
:END
        rem Maintainence, including rolling files:
                repeat 5 echo.
                repeat 5 call divider %CHECK%
                call  less_important "Running quick non-backup-related maintanence..."
                call  maintanence     NoWarning    NoBackups
                repeat 5 call divider %CHECK%
                gosub done_with_step


        rem Let them know we're done
                call header "%check%%check%%check% Done with common AutoExec! %check%%check%%check%"
                repeat 2 echo.
                call divider
                call success %italics_on%%0%italics_off% done
                call divider
                repeat 2 echo.



        rem Start primary web browser (Chrome):
                call chrome

        rem Let us abort the rest, if we wish:
                call status-bar unlock
                repeat 10 echo.
                echos %ANSI_CURSOR_VISIBLE%
                call pause-for-x-seconds 90 "Press key to run rest of autoexec..."




        rem Finish up:
                call header unlock
                call fix-window-title


